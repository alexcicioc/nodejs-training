const config = require('../../config');
const multer = require('multer');
const mime = require('mime');
const guid = require('../helpers/guid');
const response = require('../helpers/response');
const express = require('express');
const router = express.Router();
const auth = require('../helpers/authentication');

User = require('../models/user');
Image = require('../models/image');

const storage = multer.diskStorage({

    destination: function (req, file, cb) {
        cb(null, './uploads/')
    },
    filename: function (req, file, cb) {
        cb(null, guid.generate() + '.' + mime.getExtension(file.mimetype));
    }
});
const upload = multer({
    fileFilter: function (req, file, callback) {
        if (typeof file === "undefined") {
            throw new Error('Missing file in request');
        }

        if (!file.mimetype.match(/image\/(jpg|jpeg|png|gif)$/)) {
            req.fileValidationError = 'Only image files are allowed!';
            callback(null, false);
        } else {
            callback(null, true);
        }
    },
    storage: storage
}).single('imageFile');

// Images GET
router.get('/', function (req, res) {
    let allUsers = [];
    User.getUsers((err, users) => {

        for (let index in users) {
            allUsers.push(users[index].username);
        }
    });

    res.render(
        config.app.viewRoot + 'fileUpload.html',
        {
            locals: {
                baseUrl: config.app.baseUrl,
                allUsers: allUsers
            }
        }
    );
});

// Authenticated resources start here
router.use(auth.checkToken);
// /images/uploadImage POST
router.post('/upload', upload, function (req, res) {

    let requestBody = req.body;

    upload(req, res, () => {

        if (req.fileValidationError) {
            response.badRequestResponse(res, req.fileValidationError);
        } else {
            Image.addImage({
                title: requestBody.title,
                imagePath: req.file.path,
                keywords: requestBody.keywords.split(','),
                createdBy: req.user.username,
            }, function (err, image) {
                if (err) {
                    throw err;
                }
                response.success(
                    res,
                    {
                        url: config.app.baseUrl + req.file.path,
                        image: image
                    }
                );
            });

        }
    });
});

// Handle unexpected exceptions
router.use(function (err, req, res, next) {
    response.exceptionResponse(res, err);
});

module.exports = router;